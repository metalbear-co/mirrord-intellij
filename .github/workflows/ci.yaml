name: CI

on:
  workflow_dispatch:
  push:
    branches-ignore: [staging-squash-merge.tmp]
  pull_request:
    branches: [main, staging, trying]
    types: [opened, synchronize, reopened, ready_for_review]

# Cancel previous runs on the same PR.
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  towncrier_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: install towncrier
        run: pip install towncrier
      - name: verify newsfragment exist
        run: towncrier check

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
      - name: Build Plugin
        env:
          CI_BUILD_PLUGIN: true
        run: |
          chmod +x ./gradlew
          ./gradlew buildPlugin
      - name: Run plugin verifier
        env:
          CI_BUILD_PLUGIN: true
        run: |
          ./gradlew runPluginVerifier

  lint_markdown:
    runs-on: ubuntu-latest
    needs: changed_files
    if: ${{needs.changed_files.outputs.markdown_changed == 'true' || needs.changed_files.outputs.ci_changed == 'true'}}
    steps:
      - uses: actions/checkout@v3
      - uses: avto-dev/markdown-lint@v1
        with:
          config: "markdownlint-config.json"
          args: "README.md" "TELEMETRY.md" "CONTRIBUTING.md"
   
  # We need some "accummulation" job here because bors fails (timeouts) to
  # listen on matrix builds.
  # Hence, we have some kind of dummy here that bors can listen on
  ci-success:
    name: ci
    # We want this to run even if some of the required jobs got skipped
    if: always()
    needs:
      [
        towncrier_check,
        build,
        lint_markdown,
      ]
    runs-on: ubuntu-latest
    steps:
      - name: CI succeeded
        # We have to do it in the shell since if it's in the if condition
        # then skipping is considered success by branch protection rules
        env:
          CI_SUCCESS: ${{ (needs.towncrier_check.result == 'success') &&
            (needs.build.result == 'success' || needs.build.result == 'skipped') &&
            (needs.lint_markdown.result == 'success' || needs.lint_markdown.result == 'skipped') }}
        run: echo $CI_SUCCESS && if [ "$CI_SUCCESS" == "true" ]; then echo "SUCCESS" && exit 0; else echo "Failure" && exit 1; fi
